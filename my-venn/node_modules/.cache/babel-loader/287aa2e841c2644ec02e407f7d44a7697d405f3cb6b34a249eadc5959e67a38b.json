{"ast":null,"code":"var _jsxFileName = \"/Users/nikhilsingh/Desktop/my-venn/src/components/VennData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VennData = () => {\n  _s();\n  const [vennData, setVennData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"./venn_out_da (1).txt\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const text = await response.text();\n        const rows = text.trim().split(\"\\n\");\n        const headers = rows.shift().split(\"\\t\"); // Assuming headers are in the first row\n        const data = rows.map(row => {\n          const values = row.split(\"\\t\");\n          return headers.reduce((obj, header, index) => {\n            obj[header] = values[index];\n            return obj;\n          }, {});\n        });\n        setVennData(data);\n      } catch (error) {\n        console.error(\"Error fetching the Venn diagram data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Venn Diagram Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: vennData.length > 0 && Object.keys(vennData[0]).map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: vennData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(row).map((value, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(VennData, \"e7SHx1+MC3bfIPI9CaUQg4m3bww=\");\n_c = VennData;\nexport default VennData;\nvar _c;\n$RefreshReg$(_c, \"VennData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VennData","_s","vennData","setVennData","fetchData","response","fetch","ok","Error","text","rows","trim","split","headers","shift","data","map","row","values","reduce","obj","header","index","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Object","keys","value","_c","$RefreshReg$"],"sources":["/Users/nikhilsingh/Desktop/my-venn/src/components/VennData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst VennData = () => {\n  const [vennData, setVennData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"./venn_out_da (1).txt\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const text = await response.text();\n        const rows = text.trim().split(\"\\n\");\n        const headers = rows.shift().split(\"\\t\"); // Assuming headers are in the first row\n        const data = rows.map((row) => {\n          const values = row.split(\"\\t\");\n          return headers.reduce((obj, header, index) => {\n            obj[header] = values[index];\n            return obj;\n          }, {});\n        });\n        setVennData(data);\n      } catch (error) {\n        console.error(\"Error fetching the Venn diagram data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Venn Diagram Data</h2>\n      <table>\n        <thead>\n          <tr>\n            {vennData.length > 0 &&\n              Object.keys(vennData[0]).map((header) => (\n                <th key={header}>{header}</th>\n              ))}\n          </tr>\n        </thead>\n        <tbody>\n          {vennData.map((row, index) => (\n            <tr key={index}>\n              {Object.values(row).map((value, index) => (\n                <td key={index}>{value}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default VennData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}